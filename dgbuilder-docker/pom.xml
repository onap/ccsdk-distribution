<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.ccsdk.distribution</groupId>
        <artifactId>distribution-root</artifactId>
        <version>1.1.1-SNAPSHOT</version>
    </parent>

    <groupId>org.onap.ccsdk.distribution</groupId>
    <artifactId>distribution-dgbuilder-docker</artifactId>
    <packaging>pom</packaging>

    <name>ccsdk-distribution :: dgbuilder-docker</name>
    <description>Creates docker container for dgbuilder</description>
    <organization>
        <name>ONAP</name>
    </organization>

    <properties>
        <image.name>onap/ccsdk-dgbuilder-image</image.name>
        <uniquedockertag>${env.UNIQUE_DOCKER_TAG}</uniquedockertag>
    </properties>

    <build>
        <plugins>

            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../src/main/scripts/TagSnapshotVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dockerfile</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <includes>
                                        <include>Dockerfile</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>Make-stage-dir</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/mkdir</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>${basedir}/target/docker-stage/opt/onap/ccsdk</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Unzip dgbuilder</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/unzip</executable>
                            <arguments>
                                <argument>-d</argument>
                                <argument>${basedir}/target/docker-stage/opt/onap/ccsdk</argument>
                                <argument>../dgbuilder/target/*.zip</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Copy dgbuilder</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/cp</executable>
                            <arguments>
                                <argument>-r</argument>
                                <argument>../dgbuilder</argument>
                                <argument>${basedir}/target/docker-stage/opt/onap/ccsdk</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>dgbuilder createReleaseDir</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/bin/bash</executable>
                            <arguments>
                                <argument>${basedir}/target/docker-stage/opt/onap/ccsdk/dgbuilder/createReleaseDir.sh</argument>
                                <argument>1702</argument>
                                <argument>dguser</argument>
                                <argument>change_email_id@dgbuilder.com</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>change shell permissions</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/find</executable>
                            <arguments>
                                <argument>${basedir}/target/docker-stage/opt/onap/ccsdk</argument>
                                <argument>-name</argument>
                                <argument>*.sh</argument>
                                <argument>-exec</argument>
                                <argument>chmod</argument>
                                <argument>+x</argument>
                                <argument>{}</argument>
                                <argument>;</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.34.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <images>
                                <image>
                                    <name>${image.name}</name>
                                    <build>
                                        <cleanup>try</cleanup>
                                        <contextDir>${basedir}/target/docker-stage</contextDir>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.docker.latestminortag.snapshot.version}</tag>
                                            <tag>${project.docker.latestfulltag.snapshot.version}</tag>
                                            <tag>${project.docker.latesttagtimestamp.snapshot.version}</tag>
											<tag>${project.docker.uniquedockertag.snapshot.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                            <verbose>${docker.verbose}</verbose>
                            <!-- Hardocding skipPush to false, as during verification CSIT currently pulling docker image from nexus -->
                            <!-- <skipPush>${docker.skip.push}</skipPush> -->
                            <skipPush>false</skipPush>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-push-images</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
