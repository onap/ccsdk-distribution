<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.ccsdk.distribution</groupId>
        <artifactId>distribution-root</artifactId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>distribution-alpine-root</artifactId>
    <packaging>pom</packaging>

    <name>ccsdk-distribution :: alpine</name>
    <description>Creates OpenDaylight container</description>

    <properties>
        <openjdk.image>eclipse-temurin</openjdk.image>
        <openjdk.additional.packages>sudo bash iputils openssl git mysql-client nodejs npm python3 py3-pip graphviz unzip rsync nss</openjdk.additional.packages>
        <alpinej21.image.name>onap/ccsdk-alpine-j21-image</alpinej21.image.name>
        <alpinej17.image.name>onap/ccsdk-alpine-j17-image</alpinej17.image.name>
        <alpinej11.image.name>onap/ccsdk-alpine-j11-image</alpinej11.image.name>
        <openjdk21.image.version>21.0.6_7-jre-alpine</openjdk21.image.version>
        <openjdk17.image.version>17.0.14_7-jre-alpine</openjdk17.image.version>
        <openjdk11.image.version>11.0.26_4-jre-alpine</openjdk11.image.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../src/main/scripts/TagVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dockerfile</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <includes>
                                        <include>*.Dockerfile</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-certificates</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>*.pem</include>
                                        <include>*.md</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>



    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.46.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <images>
                                <image>
                                    <name>${alpinej21.image.name}</name>
                                    <build>
                                        <buildx>
                                            <platforms>
                                                <platform>${docker.platforms}</platform>
                                            </platforms>
                                        </buildx>
                                        <cleanup>try</cleanup>
                                        <noCache>true</noCache>
                                        <contextDir>${basedir}/target/docker-stage</contextDir>
                                        <dockerFile>java21.Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.docker.latestminortag.version}</tag>
                                            <tag>${project.docker.latestfulltag.version}</tag>
                                            <tag>${project.docker.latesttagtimestamp.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                                <image>
                                    <name>${alpinej17.image.name}</name>
                                    <build>
                                        <buildx>
                                            <platforms>
                                                <platform>${docker.platforms}</platform>
                                            </platforms>
                                        </buildx>
                                        <cleanup>try</cleanup>
                                        <noCache>true</noCache>
                                        <contextDir>${basedir}/target/docker-stage</contextDir>
                                        <dockerFile>java17.Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.docker.latestminortag.version}</tag>
                                            <tag>${project.docker.latestfulltag.version}</tag>
                                            <tag>${project.docker.latesttagtimestamp.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                                <image>
                                    <name>${alpinej11.image.name}</name>
                                    <build>
                                        <buildx>
                                            <platforms>
                                                <platform>${docker.platforms}</platform>
                                            </platforms>
                                        </buildx>
                                        <cleanup>try</cleanup>
                                        <noCache>true</noCache>
                                        <contextDir>${basedir}/target/docker-stage</contextDir>
                                        <dockerFile>java11.Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.docker.latestminortag.version}</tag>
                                            <tag>${project.docker.latestfulltag.version}</tag>
                                            <tag>${project.docker.latesttagtimestamp.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                            <verbose>${docker.verbose}</verbose>
                            <skipPush>${docker.skip.push}</skipPush>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-push-images</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
