<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.onap.ccsdk.parent</groupId>
		<artifactId>odlparent-lite</artifactId>
		<version>2.0.2</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<groupId>org.onap.ccsdk.distribution</groupId>
	<artifactId>ansible-server</artifactId>
	<version>1.0.3-SNAPSHOT</version>

	<name>ccsdk :: distribution :: ${project.artifactId}</name>
	<description>Creates ansible-server Docker container</description>

	<properties>
		<image.name>onap/ccsdk-ansible-server-image</image.name>
		<ccsdk.project.version>${project.version}</ccsdk.project.version>
		<ccsdk.build.timestamp>${maven.build.timestamp}</ccsdk.build.timestamp>
		<ccsdk.distribution.version>${project.version}</ccsdk.distribution.version>
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
		<docker.verbose>true</docker.verbose>
	</properties>


	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>${basedir}/../src/main/scripts/TagVersion.groovy</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-dockerfile</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage</outputDirectory>
							<resources>
								<resource>
									<directory>src/main</directory>
									<includes>
										<include>**/*</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<version>1.5.0</version>
				<executions>
					<execution>
						<id>change python permissions</id>
						<phase>process-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>/usr/bin/find</executable>
							<arguments>
								<argument>${basedir}/target/docker-stage/ansible-server</argument>
								<argument>-name</argument>
								<argument>*.py</argument>
								<argument>-exec</argument>
								<argument>chmod</argument>
								<argument>+x</argument>
								<argument>{}</argument>
								<argument>;</argument>
							</arguments>
						</configuration>
					</execution>
                    	                <execution>
						 <id>change shell permissions</id>
						 <phase>process-sources</phase>
						 <goals>
							   <goal>exec</goal>
						 </goals>
						 <configuration>
							  <executable>/usr/bin/find</executable>
						  <arguments>
							<argument>${basedir}/target/docker-stage/ansible-server</argument>
							<argument>-name</argument>
							<argument>*.sh</argument>
							<argument>-exec</argument>
							<argument>chmod</argument>
							<argument>+x</argument>
							<argument>{}</argument>
							<argument>;</argument>
						  </arguments>
						</configuration>
				        </execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.28.0</version>
						<inherited>false</inherited>
						<configuration>
							<images>
								<image>
									<name>${image.name}</name>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
										<dockerFile>Dockerfile</dockerFile>
										<tags>
											<tag>${project.docker.latestminortag.version}</tag>
											<tag>${project.docker.latestfulltag.version}</tag>
											<tag>${project.docker.latesttagtimestamp.version}</tag>
										</tags>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>generate-images</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>

							<execution>
								<id>push-images</id>
								<phase>deploy</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<organization>
		<name>ONAP</name>
	</organization>
</project>
